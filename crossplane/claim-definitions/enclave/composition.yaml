# nonk8s
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xenclaves.aws.infra.bigbang.dev
  labels:
    provider: aws
spec:
  compositeTypeRef:
    apiVersion: infra.bigbang.dev/v1alpha1
    kind: XEnclave

  patchSets:
    - name: common-parameters
      patches:
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.region

  resources:
    - name: vpc
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: VPC
        metadata:
          labels:
            internalName: vpc
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.0.0/16"
            enableDnsHostNames: true
            enableDnsSupport: true
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.tags[0].value
    - name: public-subnet-a
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            visibility: public
            internalName: public-subnet-a
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.0.0/20"
            mapPublicIPOnLaunch: true
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-public-subnet-a"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.availabilityZone1
          toFieldPath: spec.forProvider.availabilityZone
    - name: public-subnet-b
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            visibility: public
            internalName: public-subnet-b
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.16.0/20"
            mapPublicIPOnLaunch: true
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-public-subnet-b"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.availabilityZone2
          toFieldPath: spec.forProvider.availabilityZone
    - name: public-subnet-c
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            visibility: public
            internalName: public-subnet-c
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.32.0/20"
            mapPublicIPOnLaunch: true
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-public-subnet-c"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.availabilityZone3
          toFieldPath: spec.forProvider.availabilityZone
    - name: private-subnet-a
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            visibility: private
            internalName: private-subnet-a
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.128.0/20"
            mapPublicIPOnLaunch: false
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-private-subnet-a"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.availabilityZone1
          toFieldPath: spec.forProvider.availabilityZone
    - name: private-subnet-b
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            visibility: private
            internalName: private-subnet-b
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.144.0/20"
            mapPublicIPOnLaunch: false
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-private-subnet-b"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.availabilityZone2
          toFieldPath: spec.forProvider.availabilityZone
    - name: private-subnet-c
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            visibility: private
            internalName: private-subnet-c
        spec:
          forProvider:
            # TODO: make this an optional variable
            cidrBlock: "10.0.160.0/20"
            mapPublicIPOnLaunch: false
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-private-subnet-c"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.availabilityZone3
          toFieldPath: spec.forProvider.availabilityZone
    - name: dbsubnetgroup
      base:
        apiVersion: database.aws.crossplane.io/v1beta1
        kind: DBSubnetGroup
        metadata:
          labels:
            internalName: dbsubnetgroup
        spec:
          forProvider:
            description: "Subnet group for databases"
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                visibility: private
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-dbsubnetgroup"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: internetgateway
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: InternetGateway
        metadata:
          labels:
            internalName: internetgateway
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-internetgateway"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: natgateway-eip
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Address
        metadata:
          labels:
            internalName: natgateway-eip
        spec:
          forProvider:
            domain: vpc
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-natgateway-eip"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: natgateway
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: NATGateway
        metadata:
          labels:
            internalName: natgateway
        spec:
          forProvider:
            allocationIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: natgateway-eip
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: public-subnet-a
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-natgateway"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: routetable-public
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        metadata:
          labels:
            visibility: public
            internalName: routetable-public
        spec:
          forProvider:
            ignoreRoutes: true
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    internalName: "public-subnet-a"
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    internalName: "public-subnet-b"
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    internalName: "public-subnet-c"
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-routetable-public"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: route-routetable-public-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1alpha1
        kind: Route
        metadata:
          labels:
            internalName: route-routetable-public-1
        spec:
          forProvider:
            # TODO: make this an optional variable
            destinationCIDRBlock: "0.0.0.0/0"
            gatewayIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: internetgateway
            routeTableIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: routetable-public
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: routetable-private-a
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        metadata:
          labels:
            visibility: private
            internalName: routetable-private-a
        spec:
          forProvider:
            ignoreRoutes: true
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    internalName: private-subnet-a
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-routetable-private-a"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
        - type: PatchSet
          patchSetName: common-parameters
    - name: route-routetable-private-a-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1alpha1
        kind: Route
        metadata:
          labels:
            internalName: route-routetable-private-a-1
        spec:
          forProvider:
            # TODO: make this an optional variable
            destinationCIDRBlock: "0.0.0.0/0"
            natGatewayIdSelector:
              matchControllerRef: true
            routeTableIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: routetable-private-a
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: routetable-private-b
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        metadata:
          labels:
            visibility: private
            internalName: routetable-private-b
        spec:
          forProvider:
            ignoreRoutes: true
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    internalName: private-subnet-b
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-routetable-private-b"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: route-routetable-private-b-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1alpha1
        kind: Route
        metadata:
          labels:
            internalName: route-routetable-private-b-1
        spec:
          forProvider:
            # TODO: make this an optional variable
            destinationCIDRBlock: "0.0.0.0/0"
            natGatewayIdSelector:
              matchControllerRef: true
            routeTableIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: routetable-private-b
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: routetable-private-c
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        metadata:
          labels:
            visibility: private
            internalName: routetable-private-c
        spec:
          forProvider:
            ignoreRoutes: true
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    internalName: "private-subnet-c"
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-routetable-private-c"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - type: PatchSet
          patchSetName: common-parameters
    - name: route-routetable-private-c-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1alpha1
        kind: Route
        metadata:
          labels:
            internalName: route-routetable-private-c-1
        spec:
          forProvider:
            # TODO: make this an optional variable
            destinationCIDRBlock: "0.0.0.0/0"
            natGatewayIdSelector:
              matchControllerRef: true
            routeTableIdSelector:
              matchControllerRef: true
              matchLabels:
                internalName: routetable-private-c
      patches:
        - type: PatchSet
          patchSetName: common-parameters